name: Deploy to Windows Server

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/norskball-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: DOCKER_BUILDKIT=1

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/norskball-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: DOCKER_BUILDKIT=1

      - name: Test SSH connection
        run: |
          echo "Testing SSH port..."
          nc -zv 79.161.238.249 22 || echo "Port 22 is not reachable"
          echo "Testing SSH key..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 79.161.238.249 >> ~/.ssh/known_hosts
          ssh -v -o BatchMode=yes -o StrictHostKeyChecking=no -o ConnectTimeout=10 ${{ secrets.SERVER_USERNAME }}@79.161.238.249 'echo "SSH connection successful"' || echo "SSH connection failed"

      - name: Deploy to Windows Server
        uses: appleboy/ssh-action@master
        with:
          host: 79.161.238.249
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: "20m"
          debug: true
          script: |
            echo "Current directory: $(pwd)"
            if [ ! -d "Norskball" ]; then
              echo "Norskball directory not found"
              ls -la
              exit 1
            fi
            cd Norskball || exit 1
            echo "Setting DOCKERHUB_USERNAME environment variable"
            export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            echo "Pulling new images"
            docker-compose pull || exit 1
            echo "Starting services"
            docker-compose up -d || exit 1 